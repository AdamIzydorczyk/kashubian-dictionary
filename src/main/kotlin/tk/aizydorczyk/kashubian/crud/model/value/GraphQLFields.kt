package tk.aizydorczyk.kashubian.crud.model.value

class GraphQLFields {
    companion object {
        const val SELECT_PREFIX = "select"

        const val KASHUBIAN_ENTRIES_PAGED_TYPE_PREFIX = "KashubianEntriesPaged."
        const val MEANINGS_PAGED_TYPE_PREFIX = "MeaningsPaged."

        const val KASHUBIAN_ENTRY_TYPE_PREFIX = "/KashubianEntry"
        const val OTHER_TYPE_PREFIX = "/Other"
        const val SOUND_FILE_TYPE_PREFIX = "/SoundFile"
        const val TRANSLATION_TYPE_PREFIX = "/Translation"
        const val SYNONYM_TYPE_PREFIX = "/Synonym"
        const val ANTONYM_TYPE_PREFIX = "/Antonym"
        const val PROVERB_TYPE_PREFIX = "/Proverb"
        const val QUOTE_TYPE_PREFIX = "/Quote"
        const val EXAMPLE_TYPE_PREFIX = "/Example"
        const val IDIOM_TYPE_PREFIX = "/Idiom"
        const val MEANING_TYPE_PREFIX = "/Meaning"
        const val MEANING_SIMPLIFIED_TYPE_PREFIX = "/MeaningSimplified"
        const val KASHUBIAN_ENTRY_SIMPLIFIED_TYPE_PREFIX = "/KashubianEntrySimplified"

        const val OTHERS_NODE = ".others"
        const val SOUND_FILE_NODE = ".soundFile"
        const val OTHER_NODE = ".other"
        const val BASE_NODE = ".base"
        const val MEANINGS_NODE = ".meanings"
        const val TRANSLATION_NODE = ".translation"
        const val HYPERONYM_NODE = ".hyperonym"
        const val KASHUBIAN_ENTRY_NODE = ".kashubianEntry"
        const val PROVERBS_NODE = ".proverbs"
        const val QUOTES_NODE = ".quotes"
        const val EXAMPLES_NODE = ".examples"
        const val IDIOMS_NODE = ".idioms"
        const val SYNONYMS_NODE = ".synonyms"
        const val ANTONYMS_NODE = ".antonyms"
        const val SYNONYM_NODE = ".synonym"
        const val ANTONYM_NODE = ".antonym"
        const val ORIGIN_FIELD = ".origin"

        const val ID_FIELD = ".id"
        const val HYPERONYMS_FIELD = "${HYPERONYM_NODE}s"
        const val DEFINITION_FIELD = ".definition"
        const val HYPONYMS_FIELD = ".hyponyms"
        const val NORMALIZED_POLISH_FIELD = ".normalizedPolish"
        const val ENGLISH_FIELD = ".english"
        const val NORMALIZED_ENGLISH_FIELD = ".normalizedEnglish"
        const val GERMAN_FIELD = ".german"
        const val NORMALIZED_GERMAN_FIELD = ".normalizedGerman"
        const val UKRAINIAN_FIELD = ".ukrainian"
        const val NORMALIZED_UKRAINIAN_FIELD = ".normalizedUkrainian"
        const val POLISH_FIELD = ".polish"
        const val NOTE_FIELD = ".note"
        const val PROVERB_FIELD = ".proverb"
        const val QUOTE_FIELD = ".quote"
        const val EXAMPLE_FIELD = ".example"
        const val IDIOM_FIELD = ".idiom"
        const val WORD_FIELD = ".word"
        const val NORMALIZED_WORD_FIELD = ".normalizedWord"
        const val VARIATION_FIELD = ".variation"
        const val PRIORITY_FIELD = ".priority"
        const val PART_OF_SPEECH_FIELD = ".partOfSpeech"
        const val PART_OF_SPEECH_SUB_TYPE_FIELD = ".partOfSpeechSubType"
        const val MEANINGS_COUNT_FIELD = ".meaningsCount"
        const val BASES_FIELD = "${BASE_NODE}s"
        const val DERIVATIVES_FIELD = ".derivatives"
        const val TYPE_FIELD = ".type"
        const val FILE_NAME = ".fileName"
    }
}